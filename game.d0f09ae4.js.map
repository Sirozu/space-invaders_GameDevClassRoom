{"version":3,"sources":["src/sprite.js","src/config.js","src/screen.js","src/gameObject.js","src/bullet.js","src/enemy.js","src/inputHandler.js","src/gun.js","src/shield.js","src/game.js"],"names":["Sprite","sp","x","y","w","h","canvas","document","getElementById","ctx","getContext","width","height","SHIPS_IN_LINE","WIDTH_CANVAS","HEIGHT_CANVAS","image","Image","src","assetPath","ENEMY_SPRITERS","GUN_SPRITERS","GUN_BULLET_SPRITERS","ENEMY_BULLET_SPRITERS","SHIELD_SPRITERS","Screen","rect","fillStyle","fill","gun","bullets","enemyFleet","step","shield1","shield2","shield3","shield4","drawBar","draw","forEach","bullet","ships","ship","stepGap","beginPath","moveTo","lineTo","strokeStyle","stroke","closePath","drawLifeBar","drawScoreBar","score","spr","spriters","i","life","drawImage","font","textBaseline","fillText","txt","GameObject","dx","dy","curSprite","changeSprite","length","Bullet","type","targets","self","result","target","destroy","isAlive","splice","shield","Enemy","rateDestroy","fired","Math","floor","random","push","EnemyLine","count","space","enemies","enemy","stepToDown","numDestroyedShips","fire","EnemyFleet","lines","sort","a","b","startCountShips","stepDelay","line","concat","checkEdges","enemyLine","numDestroyed","num","j","arr","leftEmpty","rightEmpty","updateWidth","enemySpriters","size","enemyLines","lLines","lSpriters","hSprite","InputHandler","down","pressed","addEventListener","event","keyCode","code","Object","keys","Gun","isMoving","stop","moving","Shield","startGameLoop","screen","input","round","makeLines","commandController","startCommandController","isDown","movingLeft","movingRight","isPressed","loop","message","clearAll","clear","isHitShield","isHit","drawAll","requestAnimationFrame","setTimeout","wait","isAnyKeyPressed","gameLoop"],"mappings":"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","file":"game.d0f09ae4.js","sourceRoot":"..","sourcesContent":["export default class Sprite {\r\n  constructor(sp, x, y, w, h) {\r\n    this.sp = sp;\r\n  \tthis.x = x;\r\n  \tthis.y = y;\r\n  \tthis.w = w;\r\n  \tthis.h = h;\r\n  }\r\n}\r\n","import Sprite from './sprite';\r\nimport assetPath from '../assets/invaders.png'\r\n\r\nexport const canvas = document.getElementById(\"cnvs\");\r\n\r\nexport var ctx = canvas.getContext('2d');\r\n\r\nctx.canvas.width  = 600//window.innerWidth;\r\nctx.canvas.height = 500//window.innerHeight;\r\n\r\nexport const SHIPS_IN_LINE = 10;\r\n\r\nexport const WIDTH_CANVAS = canvas.width;\r\n\r\nexport const HEIGHT_CANVAS = canvas.height;\r\n\r\nvar image = new Image();\r\nimage.src = assetPath;\r\n\r\n// Получаем массив спрайтов вражеских кораблей\r\nexport const ENEMY_SPRITERS = [\r\n  [new Sprite(image, 22, 0, 16, 16), new Sprite(image, 22, 16, 16, 16)],\r\n  [new Sprite(image, 0, 0, 22, 16), new Sprite(image, 0, 16, 22, 16)],\r\n  [new Sprite(image, 38, 0, 24, 16), new Sprite(image, 38, 16, 24, 16)]\r\n];\r\n// Получаем массив спрайтов пушки\r\nexport const GUN_SPRITERS = [new Sprite(image, 62, 0, 22, 16)];\r\n// Получаем массив спрайтов снаряда пушки\r\nexport const GUN_BULLET_SPRITERS = [new Sprite(image, 73, 0, 1, 3)];\r\n// Получаем массив спрайтов снаряда вражеских кораблей\r\nexport const ENEMY_BULLET_SPRITERS = [new Sprite(image, 50, 0, 1, 3)];\r\n// Получаем массив спрайтов щита \r\nexport const SHIELD_SPRITERS = [new Sprite(image, 84, 0, 42, 30)]\r\n","import { WIDTH_CANVAS, HEIGHT_CANVAS} from './config';\r\nexport default class Screen {\r\n  constructor (ctx) {\r\n    this.ctx = ctx;\r\n    this.w = WIDTH_CANVAS;\r\n    this.h = HEIGHT_CANVAS;\r\n  }\r\n\r\n  // функия полной очистки экрана\r\n  clearAll () {\r\n    this.ctx.rect(0, 0, this.w, this.h);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fill();\r\n  }\r\n  drawAll (gun, bullets, enemyFleet, step, shield1, shield2, shield3, shield4) {\r\n    this.drawBar(gun);\r\n    gun.draw();\r\n    bullets.forEach(function (bullet) {\r\n      bullet.draw();\r\n    });\r\n    enemyFleet.ships.forEach(function (ship) {\r\n      ship.draw((step - 20) % enemyFleet.stepGap === 0);\r\n    });\r\n\r\n    shield1.draw();\r\n    shield2.draw();\r\n    shield3.draw();\r\n    shield4.draw();\r\n  }\r\n  clear (x, y, w, h) {\r\n    this.ctx.rect(x, y, w, h);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fill();\r\n  }\r\n  // отрисовка бара\r\n  drawBar (gun) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(0, this.h - 32);\r\n    this.ctx.lineTo(this.w, this.h - 32);\r\n    this.ctx.strokeStyle = 'red';\r\n    this.ctx.stroke();\r\n    this.ctx.closePath();\r\n\r\n    if (gun) {\r\n      this.drawLifeBar(gun);\r\n      this.drawScoreBar(gun.score);\r\n    }\r\n  }\r\n  // отрисовка жизней\r\n  drawLifeBar (gun) {\r\n    let spr = gun.spriters[0];\r\n\r\n    let x = 0;\r\n\r\n    let y = this.h - 32 + (32 - 16) / 2;\r\n\r\n    let space = 8;\r\n\r\n    let w = 22 * 3 + space * 3;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.rect(x, y, w, this.h);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fill();\r\n    this.ctx.closePath();\r\n\r\n    for (let i = 0; i < gun.life; i++) {\r\n      this.ctx.drawImage(spr.sp, spr.x, spr.y, spr.w, spr.h, x + spr.w * i + space * (i + 1), y, spr.w, spr.h);\r\n    }\r\n  }\r\n  // отрисовка очков\r\n  drawScoreBar (score) {\r\n    let x = this.w - 100;\r\n\r\n    let y = this.h - 32 + (32 - 16) / 2;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.rect(x, y, this.w, this.h);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fill();\r\n    this.ctx.closePath();\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.font = '16px serif';\r\n    this.ctx.textBaseline = 'top';\r\n    this.ctx.fillStyle = 'red';\r\n    this.ctx.fillText(`SCORE  ${score}`, x, y);\r\n    this.ctx.closePath();\r\n  }\r\n  // сообщение\r\n  message (txt, x, y = this.h / 2 - 8) {\r\n    this.ctx.beginPath();\r\n    this.ctx.font = '16px serif';\r\n    this.ctx.textBaseline = 'top';\r\n    this.ctx.fillStyle = 'red';\r\n    this.ctx.fillText(txt, x, y);\r\n    this.ctx.closePath();\r\n  }\r\n}\r\n","export default class GameObject {\r\n  constructor (ctx, spriters = [], x = 0, y = 0, dx = 4, dy = 16) {\r\n    this.ctx = ctx;\r\n    this.spriters = spriters;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.curSprite = 0;\r\n\r\n    if (spriters[0]) {\r\n      this.w = spriters[0].w;\r\n      this.h = spriters[0].h;\r\n    }\r\n  }\r\n\r\n  clear () {\r\n    this.ctx.beginPath();\r\n    this.ctx.rect(this.x, this.y, this.w, this.h);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fill();\r\n    this.ctx.closePath();\r\n  }\r\n\r\n  draw (changeSprite = false) {\r\n    var spr = this.spriters[this.curSprite];\r\n\r\n    this.ctx.drawImage(spr.sp, spr.x, spr.y, spr.w, spr.h, this.x, this.y, this.w, this.h);\r\n\r\n    if (changeSprite) {\r\n      if (this.curSprite < this.spriters.length - 1) this.curSprite += 1;\r\n      else this.curSprite = 0;\r\n    }\r\n  }\r\n}","import GameObject from './gameObject';\r\n// type - мы ли не мы)\r\nexport default class Bullet extends GameObject \r\n{\r\n  constructor (ctx, spriters, x = 0, y = 0, dy = 3, type = 'gun') \r\n  {\r\n    super(ctx, spriters, x, y, 0, dy);\r\n    this.type = type;\r\n  }\r\n\r\n  step () \r\n  {\r\n    this.y += this.dy;\r\n  }\r\n\r\n  isHit (targets, gun) \r\n  {\r\n    var self = this;\r\n\r\n    var result = false;\r\n\r\n    targets.forEach(function (target, i) {\r\n      // Если попали в цель уничтожаем ее, если она мертва больше не отслеживаем ее\r\n      if (target.x <= self.x + self.w \r\n        && target.x + target.w >= self.x \r\n        && target.y <= self.y + self.h \r\n        && target.y + target.h >= self.y)\r\n        {\r\n          // Если стреляла пушка начислем ей очки\r\n          if (self.type === 'gun') \r\n          {\r\n            gun.score += target.score;\r\n          }\r\n\r\n          target.destroy();\r\n\r\n          if (!target.isAlive) \r\n            targets.splice(i, 1);\r\n            \r\n          return (result = true);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  isHitShield (shield) \r\n  {\r\n    var bullet = this;\r\n\r\n    // Если попали в цель уничтожаем ее, если она мертва больше не отслеживаем ее\r\n    if  (shield.x <= bullet.x + bullet.w \r\n      && shield.x + shield.w >= bullet.x \r\n      && shield.y <= bullet.y + bullet.h \r\n      && shield.y + shield.h >= bullet.y)\r\n      {\r\n\r\n        shield.destroy();\r\n\r\n        if (!shield.isAlive) \r\n        {\r\n          shield.x = 5000\r\n          shield.y = 5000\r\n        }\r\n          \r\n        return true;\r\n      }\r\n\r\n    return false;\r\n  }\r\n}","import { WIDTH_CANVAS, ENEMY_BULLET_SPRITERS } from './config';\r\nimport GameObject from './gameObject';\r\nimport Bullet from './bullet';\r\n\r\nclass Enemy extends GameObject {\r\n  constructor (ctx, spriters, x = 0, y = 0, score = 10, dx = -4, dy = 16) {\r\n    super(ctx, spriters, x, y, dx, dy);\r\n    this.isAlive = true;\r\n    this.score = score;\r\n  }\r\n  // Шаг корабря\r\n  step (dx) {\r\n    if (this.isAlive) {\r\n      this.x += dx;\r\n    }\r\n  }\r\n  // Спуск коробля в низ\r\n  // Используется при достижении флотом левой границы.\r\n  stepToDown () {\r\n    if (this.isAlive) {\r\n      this.y += this.dy;\r\n    }\r\n  }\r\n  // Корабль по команде стреляет с некой вероятностью\r\n  fire (bullets, rateDestroy) {\r\n    // вероятность что выстрелит\r\n    var fired = !Math.floor(Math.random() * (3 + rateDestroy));\r\n    if (this.isAlive && fired) {\r\n      // Стреляет, добавляет полю в массив пуль (для их обработки в цикле игры)\r\n      bullets.push(\r\n        new Bullet(this.ctx, ENEMY_BULLET_SPRITERS, this.x + this.w / 2,\r\n          this.y + this.h, 1, 'enemy')\r\n      );\r\n    }\r\n  }\r\n  // Корабль уничтожен\r\n  destroy () {\r\n    this.isAlive = false;\r\n  }\r\n}\r\n\r\nclass EnemyLine extends GameObject {\r\n  constructor (ctx, spriters, count, y = 0, score = 10, space = 10) {\r\n    super(ctx, spriters, 0, y);\r\n    this.count = count;\r\n    this.space = space + 24 - spriters[0].w;\r\n    this.w = spriters[0].w * count + this.space * (count - 1);\r\n    this.h = spriters[0].h;\r\n    this.enemies = [];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      let x = WIDTH_CANVAS - this.spriters[0].w * (this.count - i) - this.space * (this.count - i - 1);\r\n      // Создаем корабли линни, каждый корабль будет иметь координаты в соответствии с его номером в линни\r\n      this.enemies.push(new Enemy(ctx, spriters, x, y, score));\r\n    }\r\n  }\r\n  // Пересчитывем длину линии\r\n  updateWidth () {\r\n    this.w = this.spriters[0].w * this.enemies.length + this.space * (this.enemies.length - 1);\r\n  }\r\n\r\n  step (dx) {\r\n    this.enemies.forEach(function (enemy, i) {\r\n      if (enemy.isAlive) enemy.step(dx);\r\n    });\r\n  }\r\n\r\n  stepToDown () {\r\n    this.enemies.forEach(function (enemy, i) {\r\n      if (enemy.isAlive) enemy.stepToDown();\r\n    });\r\n  }\r\n\r\n  fire (bullets, rateDestroy) {\r\n    let numDestroyedShips = [];\r\n\r\n    this.enemies.forEach(function (enemy, i) {\r\n      if (enemy.isAlive) {\r\n        enemy.fire(bullets, rateDestroy);\r\n      } else {\r\n        numDestroyedShips.push(i);\r\n      }\r\n    });\r\n\r\n    return numDestroyedShips;\r\n  }\r\n}\r\n\r\nexport default class EnemyFleet extends GameObject {\r\n  constructor (ctx, lines, y = 0, dx = -4, dy = 16, space = 8) {\r\n    super(ctx, [], 0, y, dx, dy);\r\n    this.lines = lines;\r\n    this.space = space;\r\n    this.w = lines.sort((a, b) => b.w - a.w)[0].w;\r\n    this.h = lines.length * lines[0].h + (lines.length - 1) * space;\r\n    this.x = WIDTH_CANVAS - this.w;\r\n    this.ships = [];\r\n    this.startCountShips = 0;\r\n    this.stepDelay = 32//64;\r\n\r\n    let self = this;\r\n    this.lines.sort((a, b) => a.y - b.y);\r\n\r\n    this.lines.forEach(function (line) {\r\n      self.ships = self.ships.concat(line.enemies);\r\n    });\r\n    this.startCountShips = this.ships.length;\r\n  }\r\n  // Создает массив линий вражеского флота, enemySpriters - массив спрайтов для линий\r\n  // count - количество повторений линий (созданных из enemySpriters)\r\n  // size - размер кораблей в линии\r\n  static makeLines (ctx, enemySpriters, count = 1, size = 10) {\r\n    let enemyLines = [];\r\n\r\n    let hSprite = 16;\r\n\r\n    for (let j = 0; j < count; j++) {\r\n      // Каждый спрайт отдельная линия\r\n      enemySpriters.forEach(function (spriters, i) {\r\n        let lLines = enemyLines.length;\r\n\r\n        let lSpriters = enemySpriters.length;\r\n\r\n        let y = lLines ? enemyLines[lLines - 1].y + hSprite + hSprite / 2 : 0;\r\n        enemyLines.push(new EnemyLine(ctx, spriters, size, y, 10 * (lSpriters - i)));\r\n      });\r\n    }\r\n\r\n    return enemyLines;\r\n  }\r\n\r\n  step () {\r\n    let self = this;\r\n\r\n    // Проверим крайние стобцы при необходимоти обрежем флот\r\n    this.checkEdges();\r\n    // Если не дошли до края то идем, если дошли то спускаемся\r\n    if (this.dx + this.x + this.w > WIDTH_CANVAS || this.dx + this.x < 0) {\r\n      this.dx = -this.dx;\r\n      this.stepToDown();\r\n    } else {\r\n      this.x += this.dx;\r\n      this.lines.forEach(function (enemyLine, i) {\r\n        enemyLine.step(self.dx);\r\n      });\r\n    }\r\n  }\r\n\r\n  stepToDown () {\r\n    this.y += this.dy;\r\n    this.lines.forEach(function (enemyLine, i) {\r\n      enemyLine.stepToDown();\r\n    });\r\n  }\r\n  // Флот открывает огонь из кораблейнаходящихся в нижней позиции по каждому столбу\r\n  fire (bullets) {\r\n    // Отдаем приказ нижней линии открыть огонь\r\n    let i = this.lines.length - 1;\r\n\r\n    let numDestroyed = this.lines[i].fire(bullets, this.rateDestroy);\r\n\r\n    // Линия полностью уничтожена\r\n    if (numDestroyed.length === this.lines[i].enemies.length) {\r\n      this.lines.splice(i, 1);\r\n      this.h = this.lines.length * this.lines[0].h + (this.lines.length - 1) * this.space;\r\n    }\r\n\r\n    let self = this;\r\n\r\n    i--;\r\n    // Если в линии есть потери то, приказ открыть огонь передается\r\n    // соотвествующим кораблям верхней линии.\r\n    // И так д тех пор пока приказ не будет выполнен, либо не закончатся линии флота\r\n    while (i >= 0 && numDestroyed.length !== 0) {\r\n      numDestroyed.forEach(function (num, j, arr) {\r\n        let enemy = self.lines[i].enemies[num];\r\n        // Если корабль жив то командуем огонь, и убираем его номер из массива не выполнивших приказ.\r\n        if (enemy.isAlive) {\r\n          enemy.fire(bullets, self.rateDestroy);\r\n          arr.splice(j, 1);\r\n        }\r\n      });\r\n      i--;\r\n    }\r\n  }\r\n\r\n  get stepGap () {\r\n    return Math.floor(this.stepDelay / this.rateDestroy);\r\n  }\r\n\r\n  get rateDestroy () {\r\n    return Math.floor(this.startCountShips / this.ships.length);\r\n  }\r\n  // Проверка и обрезка краев\r\n  checkEdges () {\r\n    let leftEmpty = true;\r\n\r\n    let rightEmpty = true;\r\n\r\n    this.lines.forEach(function (line) {\r\n      if (line.enemies[0].isAlive) leftEmpty = false;\r\n      if (line.enemies[line.enemies.length - 1].isAlive) rightEmpty = false;\r\n    });\r\n    // Если первый столбец потерял все корабли, удалим его\r\n    if (leftEmpty) {\r\n      this.lines.forEach(function (line) {\r\n        line.enemies.splice(0, 1);\r\n        line.updateWidth();\r\n      });\r\n      this.x += this.lines[0].enemies[0].w + this.lines[0].space;\r\n      this.w -= (this.lines[0].enemies[0].w + this.lines[0].space);\r\n    }\r\n    // Если последний столбец потерял все корабли, удалим его\r\n    if (rightEmpty) {\r\n      this.lines.forEach(function (line) {\r\n        line.enemies.splice(line.enemies.length - 1, 1);\r\n        line.updateWidth();\r\n      });\r\n      this.w -= (this.lines[0].enemies[0].w + this.lines[0].space);\r\n    }\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor () {\r\n    this.down = {};\r\n    this.pressed = {};\r\n\r\n    var self = this;\r\n\r\n    document.addEventListener('keydown', function (event) {\r\n      self.down[event.keyCode] = true;\r\n    });\r\n\r\n    document.addEventListener('keyup', function (event) {\r\n      delete self.down[event.keyCode];\r\n      delete self.pressed[event.keyCode];\r\n    });\r\n  }\r\n  // Если клавиша все еще нажата\r\n  isDown (code) {\r\n    return this.down[code];\r\n  }\r\n  isPressed (code) \r\n  {\r\n    if (this.pressed[code]) \r\n    {\r\n      return false;\r\n    } \r\n    else \r\n    {\r\n      if (this.down[code]) \r\n        return (this.pressed[code] = true);\r\n    }\r\n    return false;\r\n  }\r\n  // Нажата ли какая либо кнопка\r\n  isAnyKeyPressed () {\r\n    return !!Object.keys(this.down).length;\r\n  }\r\n}\r\n","import { WIDTH_CANVAS, HEIGHT_CANVAS, GUN_BULLET_SPRITERS} from './config';\r\nimport GameObject from './gameObject';\r\nimport Bullet from './bullet';\r\n\r\nexport default class Gun extends GameObject {\r\n  constructor (ctx, spriters, x = (WIDTH_CANVAS - 22) / 2, y = HEIGHT_CANVAS - 16, dx = 3, life = 3) {\r\n    super(ctx, spriters, x, y, dx);\r\n    this.w = 22;\r\n    this.h = 16;\r\n    this.isMoving = false;\r\n    this.life = life;\r\n    this.score = 0;\r\n  }\r\n\r\n  stop () {\r\n    this.isMoving = false;\r\n  }\r\n\r\n  moving (dx) {\r\n    if (this.isMoving && (this.x + dx >= 0 && this.x + dx <= WIDTH_CANVAS - 22)) {\r\n      this.x += dx;\r\n    } else {\r\n      this.stop();\r\n    }\r\n  }\r\n\r\n  movingLeft () {\r\n    this.isMoving = true;\r\n    this.moving(this.dx * -1);\r\n  }\r\n\r\n  movingRight () {\r\n    this.isMoving = true;\r\n    this.moving(this.dx);\r\n  }\r\n\r\n  fire (bullets) {\r\n    bullets.push(new Bullet(this.ctx, GUN_BULLET_SPRITERS, this.x + 11, this.y - 3, -1));\r\n  }\r\n\r\n  get isAlive () {\r\n    return this.life > 0;\r\n  }\r\n\r\n  destroy () {\r\n    this.life -= 1;\r\n  }\r\n}","import { WIDTH_CANVAS, HEIGHT_CANVAS, SHIELD_SPRITERS} from './config';\r\nimport GameObject from './gameObject';\r\nimport Bullet from './bullet';\r\n\r\nexport default class Shield extends GameObject {\r\n  constructor (ctx, spriters, x = WIDTH_CANVAS/ 2, y = HEIGHT_CANVAS/2 , dx = 0, life = 2) {\r\n    super(ctx, spriters, x, y, dx);\r\n    this.w = 42;\r\n    this.h = 30;\r\n    this.life = life;\r\n  }\r\n\r\n  get isAlive () {\r\n    return this.life > 0;\r\n  }\r\n\r\n  destroy () {\r\n    this.life -= 1;\r\n    this.h = 25;\r\n  }\r\n}","import { ctx,  ENEMY_SPRITERS, GUN_SPRITERS, SHIELD_SPRITERS} from './config';\r\nimport Screen from './screen';\r\nimport EnemyFleet from './enemy';\r\nimport InputHandler from './inputHandler';\r\nimport Gun from './gun';\r\nimport Shield from './shield';\r\n\r\nfunction startGameLoop (screen, input) {\r\n  let step = 0;\r\n\r\n  let round = 1;\r\n  // Создаем флот\r\n  let enemyFleet = new EnemyFleet(ctx, EnemyFleet.makeLines(ctx, ENEMY_SPRITERS, round, 10));\r\n  // Получаем пушку\r\n  let gun = new Gun(ctx, GUN_SPRITERS, (screen.w - 22) / 2, screen.h - 32 - 16 - 4);\r\n  gun.draw();\r\n\r\n  let shield1 = new Shield(ctx, SHIELD_SPRITERS, screen.w - 100, screen.h - 150);\r\n  let shield2 = new Shield(ctx, SHIELD_SPRITERS, screen.w - 250, screen.h - 150);\r\n  let shield3 = new Shield(ctx, SHIELD_SPRITERS, screen.w - 450, screen.h - 150);\r\n  let shield4 = new Shield(ctx, SHIELD_SPRITERS, screen.w - 570, screen.h - 150);\r\n  shield1.draw();\r\n  shield2.draw();\r\n  shield3.draw();\r\n  shield4.draw();\r\n\r\n  // Инииализируем массив пуль\r\n  let bullets = [];\r\n  // Иницализируем обработчик команд\r\n  let commandController = startCommandController(input);\r\n\r\n  // Обработчик команд игрока\r\n  function startCommandController (input) {\r\n    return () => {\r\n      if (input.isDown(37)) gun.movingLeft();\r\n      if (input.isDown(39)) gun.movingRight();\r\n      if (input.isPressed(32)) gun.fire(bullets);\r\n    };\r\n  }\r\n\r\n  function loop () {\r\n    // Завершаем игру\r\n    if (enemyFleet.y + enemyFleet.h >= screen.h - 32 || !gun.isAlive) {\r\n      screen.message('GAME OVER', screen.w / 2 - 50);\r\n      screen.message('YOU SCORE ' + gun.score, screen.w / 2 - 50, screen.h/2 + 50);\r\n      return 'finish';\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    // новый раунд\r\n    if (!enemyFleet.ships.length) {\r\n      round += 1;\r\n      step = 0;\r\n\r\n      enemyFleet = new EnemyFleet(ctx, EnemyFleet.makeLines(ctx, ENEMY_SPRITERS, round, 10));\r\n      gun.x = (screen.w - 22) / 2;\r\n      gun.y = screen.h - 32 - 16 - 4;\r\n      bullets = [];\r\n      screen.clearAll();\r\n      screen.drawBar(gun);\r\n      gun.draw();\r\n      shield1.draw();\r\n      shield2.draw();\r\n      shield3.draw();\r\n      shield4.draw();\r\n    }\r\n\r\n    if (step === 0) screen.message(`ROUND  ${round}`, screen.w / 2 - 30);\r\n\r\n    if (step === 20) screen.clear(screen.w / 2 - 30, screen.h / 2 - 8, screen.w, 16);\r\n    // Задержка для показа сообщений\r\n    if (step > 20) {\r\n      // обрабатываем команды игрока\r\n      commandController();\r\n      // Обрабатываем пули\r\n      bullets.forEach(function (bullet, i) {\r\n        // Двигаем пулю\r\n        bullet.step();\r\n\r\n        if (bullet.isHitShield(shield1)\r\n        || bullet.isHitShield(shield2)\r\n        || bullet.isHitShield(shield3)\r\n        || bullet.isHitShield(shield4))\r\n        {\r\n          bullets.splice(i, 1);\r\n        }\r\n\r\n        // Если пуля попала в цель, очищаем ее и больше не отслеживаем\r\n        if (bullet.isHit(bullet.type === 'gun' ? enemyFleet.ships : [gun], gun)) {\r\n          bullets.splice(i, 1);\r\n        } else {\r\n          // Удаляем улетевшие пули\r\n          if (bullet.y > screen.h - 32 - bullet.h - 2 || bullet.y < 0) {\r\n            bullets.splice(i, 1);\r\n          }\r\n        }\r\n\r\n       \r\n      });\r\n\r\n      // TODO при уменьшении количества кораблей уменьшать задержку хода флота\r\n      if ((step - 20) % enemyFleet.stepGap === 0) {\r\n        enemyFleet.step();\r\n        enemyFleet.fire(bullets);\r\n      }\r\n      screen.clearAll();\r\n      screen.drawAll(gun, bullets, enemyFleet, step, shield1, shield2, shield3, shield4);\r\n    }\r\n\r\n    step += 1;\r\n    requestAnimationFrame(loop);\r\n  }\r\n\r\n  return loop;\r\n}\r\n\r\n// Инициализируем экран\r\nlet screen = new Screen(ctx);\r\nscreen.clearAll();\r\nscreen.message('PRESS ANY KEY', screen.w / 2 - 100);\r\n// Готовимся получать команды от игрока\r\nlet input = new InputHandler();\r\n\r\nsetTimeout(function wait () {\r\n  if (input.isAnyKeyPressed()) {\r\n    screen.clearAll();\r\n\r\n    var gameLoop = startGameLoop(screen, input);\r\n    // запускаем игровой цикл\r\n    gameLoop();\r\n  } else setTimeout(wait, 0);\r\n}, 0);\r\n"]}